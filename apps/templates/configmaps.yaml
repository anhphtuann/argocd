apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
data:
  {{- $name := "{{ .app.metadata.name }}" }}
  {{- $syncStatus := "{{ .app.status.sync.status }}" }}
  {{- $repoURL := "{{ .app.spec.source.repoURL }}" }}
  {{- $startedAt := "{{ .app.status.operationState.startedAt }}" }}
  {{- $finishedAt := "{{ .app.status.operationState.finishedAt }}" }}
  {{- $message := "{{ .app.status.operationState.message }}" }}
  {{- $revision := "{{ .app.status.sync.revision }}" }}
  {{- $argocdUrl := "{{ .context.argocdUrl }}" }}
  {{- $healthStatus := "{{ .app.status.health.status }}" }}

  context: |
    argocdUrl: "https://iris-argocd.co"

  service.webhook.telegram_webhook: |
    url: $telegramUri
    headers:
    - name: Content-Type
      value: application/json

  template.app-created: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} has been created.",
            "message_thread_id": 2
          }
  template.app-deleted: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} has been deleted.",
            "message_thread_id": 2
          }
  template.app-deployed: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} is now running new version of deployments manifests.\nApplication details: {{ $argocdUrl }}/applications/{{ $name }}.\nSync Status: {{ $syncStatus }}.\nRepository: {{ $repoURL }}.\nRevision: {{ $revision }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }
  template.app-health-degraded: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} has degraded.\nApplication details: {{ $argocdUrl }}/applications/{{ $name }}.\nHealth Status: {{ $$healthStatus }}.\nRepository: {{ $repoURL }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }
  template.app-sync-failed: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "The sync operation of application {{ $name }} has failed at {{ $finishedAt }} with the following error: {{ $message }}.\nSync operation details are available at: {{ $argocdUrl }}/applications/{{ $name }}?operation=true.\nSync Status: {{ $syncStatus }}.\nRepository: {{ $repoURL }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }
  template.app-sync-running: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "The sync operation of application {{ $name }} has started at {{ $startedAt }}.\nSync operation details are available at: {{ $argocdUrl }}/applications/{{ $name }}?operation=true.\nSync Status: {{ $syncStatus }}.\nRepository: {{ $repoURL }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }
  template.app-sync-status-unknown: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} sync is 'Unknown'.\nApplication details: {{ $argocdUrl }}/applications/{{ $name }}.\nSync Status: {{ $syncStatus }}.\nRepository: {{ $repoURL }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }
  template.app-sync-succeeded: |
    webhook:
      telegram_webhook:
        method: POST
        body: |
          {
            "chat_id": -1002251325616,
            "text": "Application {{ $name }} has been successfully synced at {{ $finishedAt }}.\nSync operation details are available at: {{ $argocdUrl }}/applications/{{ $name }}?operation=true.\nSync Status: {{ $syncStatus }}.\nRepository: {{ $repoURL }}.{{if and .app .app.status .app.status.conditions}}{{range .app.status.conditions}}\n{{$c.type}}: {{$c.message}}.{{end}}{{end}}",
            "message_thread_id": 2
          }

  trigger.on-created: |
    - description: Application is created.
      oncePer: app.metadata.name
      send:
      - app-created
      when: "true"
  trigger.on-deleted: |
    - description: Application is deleted.
      oncePer: app.metadata.name
      send:
      - app-deleted
      when: app.metadata.deletionTimestamp != nil
  trigger.on-deployed: |
    - description: Application is synced and healthy. Triggered once per commit.
      oncePer: app.status.operationState.syncResult.revision
      send:
      - app-deployed
      when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status
        == 'Healthy'
  trigger.on-health-degraded: |
    - description: Application has degraded
      send:
      - app-health-degraded
      when: app.status.health.status == 'Degraded'
  trigger.on-sync-failed: |
    - description: Application syncing has failed
      send:
      - app-sync-failed
      when: app.status.operationState.phase in ['Error', 'Failed']
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - app-sync-running
      when: app.status.operationState.phase in ['Running']
  trigger.on-sync-status-unknown: |
    - description: Application status is 'Unknown'
      send:
      - app-sync-status-unknown
      when: app.status.sync.status == 'Unknown'
  trigger.on-sync-succeeded: |
    - description: Application syncing has succeeded
      send:
      - app-sync-succeeded
      when: app.status.operationState.phase in ['Succeeded']